name: Build ruleset and geodata
on:
  workflow_dispatch:
  schedule:
    - cron: "0 19 * * *"
  push:
    branches:
      - master
    paths-ignore:
      - "**/README.md"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Set variables
        run: |
          echo "update_version=$(date -d '+8 hours' +%Y-%m-%d)" >> ${GITHUB_ENV}
          echo "domains_download_url=https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash" >> ${GITHUB_ENV}
          echo "ips_download_url=https://raw.githubusercontent.com/DustinWin/geoip/ips" >> ${GITHUB_ENV}
        shell: bash
      - name: Generate `clash` rule-set
        run: |
          mkdir -p ./clash-ruleset/ 
          domains=(Advertising EasyPrivacy AdGuardSDNSFilter)
          
          # Ready for generate `clash` rule-set (mrs)
          for ((i = 0; i < 3; i++)); do
            mkdir -p "./tools/domains/${domains[i]}/"
            echo "${domains_download_url}/${domains[i]}/${domains[i]}_Domain."
            curl "${domains_download_url}/${domains[i]}/${domains[i]}_Domain.yaml"  > "./tools/domains/${domains[i]}/${domains[i]}.yaml"
          done
          wget -P ./tools/domains/Advertising https://github.com/privacy-protection-tools/anti-AD/raw/refs/heads/master/anti-ad-clash.yaml 
          cat ./tools/domains/Advertising/anti-ad-clash.yaml ./tools/domains/Advertising/Advertising.yaml | sort | uniq > merged_unique.yaml
          awk 'NR==1{last=$0; next} {print} END{print last}' merged_unique.yaml > tmp
          awk 'NF {last=$0} {lines[NR]=$0} END {print last; for (i=1; i<=NR-1; i++) print lines[i]}' tmp > merged_unique.yaml
          head merged_unique.yaml
          echo "-------------------------------------------------"
          mv tmp ./tools/domains/Advertising/Advertising.yaml
          mv ./tools/domains/Advertising/anti-ad-clash.yaml ./tools/domains/Advertising/Advertising.yaml
          mv merged_unique.yaml ./tools/domains/Advertising/Advertising.yaml
          head ./tools/domains/Advertising/Advertising.yaml
          echo "-------------------------------------------------"
          ls ./tools/domains/Advertising/
          
      - name: Download and unzip `mihomo` core
        run: |
          wget https://github.com/MetaCubeX/mihomo/releases/download/v1.19.15/mihomo-linux-amd64-v1.19.15.gz -O - | tar -zxf - -C ./tools/
          mv -f ./tools/CrashCore ./tools/mihomo

      - name: Generate `clash` rule-set (mrs)
        run: |
          cd ./tools/
          chmod +x ./mihomo
          list=($(ls ./domains/))
          for ((i = 0; i < ${#list[@]}; i++)); do
            ./mihomo convert-ruleset domain yaml "./domains/${list[i]}/${list[i]}.yaml" ../clash-ruleset/${list[i]}.mrs
          done

      - name: Release and upload `clash-ruleset` assets
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          release_name: clash-ruleset
          tag: clash-ruleset
          overwrite: true
          body: "Clash ruleset 规则集文件，包含 .yaml、.list 和 .mrs 格式"
          file_glob: true
          file: ./clash-ruleset/*

      - name: Commit and push `clash-ruleset` branch
        run: |
          cd ./clash-ruleset/ || exit 1
          git init
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git checkout -b clash-ruleset
          git add . && git commit -m "Clash rule-set 规则集文件更新于 ${update_version}"
          git remote add origin "https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}"
          git push -f -u origin clash-ruleset


      - name: Delete old workflow runs
        uses: Mattraks/delete-workflow-runs@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.repository }}
          retain_days: 3
          keep_minimum_runs: 1
